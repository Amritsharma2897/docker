# name: Playwright Tests
# on:
  # push:
  #   branches: [ main ]
#   pull_request:
#     branches: [ main ]
# jobs:
#   playwright:
#     name: 'Playwright Tests'
#     runs-on: ubuntu-latest
#     container:
#       image: mcr.microsoft.com/playwright:v1.40.1-jammy
#     services:
#       automation:
#         image: test305/automation:latest
#         ports:
#           - 8080:8080
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - name: Install dependencies
#         run: npm ci
#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps
#       - name: Build Docker image
#         run: docker build -t test305/automation:latest .
#       - name: Run Playwright tests
#         run: docker run -v $PWD:/app -w /app --network host automation npx playwright test
#       - name: Upload Playwright report
#         uses: actions/upload-artifact@v3
#         if: always()
#         with:
#           name: playwright-report
#           path: playwright-report/
#           retention-days: 30

# name: Playwright Tests

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test_job_1:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests (example_1.spec.js and example_2.spec.js)
#         run: npx playwright test tests/example_1.spec.js tests/example_2.spec.js
#       - name: Upload Playwright report artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: playwright-report-test
#           path: playwright-report/
#           retention-days: 30

#   test_job_2:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests (example_3.spec.js and example_4.spec.js)
#         run: npx playwright test tests/example_3.spec.js tests/example_4.spec.js
#       - name: Upload Playwright report artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: playwright-report
#           path: playwright-report/
#           retention-days: 30

name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1,2,3,4,5,6,7,8]
        shardTotal: [8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [playwright-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      # Set attachments directory explicitly
      - name: Set attachments directory
        run: echo "PLAYWRIGHT_OUTPUT_DIR=./playwright-report" >> $GITHUB_ENV    

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports 

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14

# name: Run Playwright Tests

# on:
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '14'

#       - name: Install Dependencies
#         run: npm install

#       - name: Set up Docker
#         uses: docker/setup-buildx-action@v1
#         with:
#           driver: docker-container
#           buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
#           install: false
#           use: true

#       - name: Build Docker Image
#         run: docker build -t automation:latest .
#         working-directory: .  # Assuming Dockerfile is in the root directory

#       - name: Run Docker Container
#         run: docker run automation:latest
#         env:
#           CI: true


# name: Playwright Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     services:
#       automation:
#         image: test305/automation:latest
#         ports:
#           - 8080:8080
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
          
#       - name: Install dependencies
#         run: npm ci
      
#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps
      
#       - name: Build Docker image
#         run: docker build -t automation .
      
#       - name: Run Playwright tests
#         run: npx playwright test
      
#       - name: Upload Playwright report
#         uses: actions/upload-artifact@v3
#         if: always()
#         with:
#           name: playwright-report
#           path: playwright-report/
#           retention-days: 30


# name: Playwright Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       docker:
#         image: test305/automation:latest
#         ports:
#           - 8080:8080

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Pull Docker image
#         run: |
#           docker pull test305/automation:latest

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests in Docker container
#         run: |
#           docker run -d \
#             -v ${{ github.workspace }}/playwright-report:/app/playwright-report \
#             -e ENV_VARIABLE=value \
#             --name test-container \
#             test305/automation:latest \
#             npx playwright test

#       - name: Wait for Test Container to Complete
#         run: sleep 10

#       - name: Cleanup
#         run: docker rm -f test-container

#       - name: Upload Test Report
#         uses: actions/upload-artifact@v3
#         with:
#           name: playwright-report
#           path: C:\Users\amrit.sharma\Documents\git_test\docker\playwright-report
#           retention-days: 30

# name: Playwright Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       docker:
#         image: test305/automation:latest
#         ports:
#           - 8080:8080

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Pull Docker image
#         run: |
#           docker pull test305/automation:latest

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests in Docker container
#         run: |
#           docker run -d \
#             -v ${{ github.workspace }}/playwright-report:/app/playwright-report \
#             -e ENV_VARIABLE=value \
#             --name test-container \
#             test305/automation:latest \
#             npx playwright test

#       - name: Wait for Test Container to Complete
#         run: sleep 10

#       - name: Print Docker Container Logs
#         run: docker logs test-container

#       - name: Verify Playwright Reports Inside Docker Container
#         run: docker exec test-container ls -R /app/playwright-report/


#       - name: List contents of the directory
#         run: ls -R ${{ github.workspace }}/playwright-report/

#       - name: Cleanup
#         run: docker rm -f test-container

#       - name: Upload Test Report
#         uses: actions/upload-artifact@v3
#         with:
#           name: playwright-report
#           path: ${{ github.workspace }}/playwright-report/
#           retention-days: 30

# name: Playwright Tests

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       docker:
#         image: test305/automation:latest
#         ports:
#           - 8080:8080

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Pull Docker image
#         run: docker pull test305/automation:latest

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests in Docker container
#         run: |
#           docker run -d \
#             -v $(pwd)/playwright-report:/docker/playwright-report \
#             -e ENV_VARIABLE=value \
#             --name test-container \
#             test305/automation:latest \
#             npx playwright test

#       - name: List contents of playwright-report directory
#         run: docker exec test-container ls -R /app/playwright-report/     

#       - name: Wait for Test Container to Complete
#         run: docker wait test-container

#       - name: Upload Test Report
#         uses: actions/upload-artifact@v3
#         with:
#           name: playwright-report
#           path: /app/playwright-report/
#           retention-days: 30